// DO NOT EDIT
// Generated by JFlex 1.8.1 http://jflex.de/
// source: src/main/resources/Lexer.lex

/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package jsyntaxpane.lexers;


import jsyntaxpane.Token;
import jsyntaxpane.TokenType;


// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public final class JavaLexer extends DefaultJFlexLexer {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;
  public static final int STRING = 2;
  public static final int CHARLITERAL = 4;
  public static final int JDOC = 6;
  public static final int JDOC_TAG = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2,  2,  3,  3,  4, 4
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\1\u0200\1\u0300\1\u0400\1\u0500\1\u0600\1\u0700"+
    "\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00\1\u0e00\1\u0f00"+
    "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500"+
    "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00"+
    "\1\u1d00\1\u1e00\12\u1f00\1\u2000\1\u2100\1\u2200\1\u1f00\1\u2300"+
    "\1\u2400\2\u1f00\31\u0100\1\u2500\121\u0100\1\u2600\4\u0100\1\u2700"+
    "\1\u0100\1\u2800\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00\53\u0100"+
    "\1\u2e00\10\u2f00\31\u1f00\1\u0100\1\u3000\1\u3100\1\u0100\1\u3200"+
    "\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900\1\u3a00"+
    "\1\u0100\1\u3b00\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000\1\u4100"+
    "\1\u1f00\1\u4200\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700\1\u4800"+
    "\1\u4900\1\u4a00\1\u4b00\1\u4c00\1\u4d00\1\u1f00\1\u4e00\1\u4f00"+
    "\1\u5000\1\u1f00\3\u0100\1\u5100\1\u5200\1\u5300\12\u1f00\4\u0100"+
    "\1\u5400\17\u1f00\2\u0100\1\u5500\41\u1f00\2\u0100\1\u5600\1\u5700"+
    "\2\u1f00\1\u5800\1\u5900\27\u0100\1\u5a00\2\u0100\1\u5b00\45\u1f00"+
    "\1\u0100\1\u5c00\1\u5d00\11\u1f00\1\u5e00\24\u1f00\1\u5f00\1\u6000"+
    "\1\u1f00\1\u6100\1\u6200\1\u6300\1\u6400\2\u1f00\1\u6500\5\u1f00"+
    "\1\u6600\1\u6700\1\u6800\5\u1f00\1\u6900\1\u6a00\2\u1f00\1\u6b00"+
    "\1\u1f00\1\u6c00\21\u1f00\246\u0100\1\u6d00\20\u0100\1\u6e00\1\u6f00"+
    "\25\u0100\1\u7000\34\u0100\1\u7100\14\u1f00\2\u0100\1\u7200\u0b05\u1f00"+
    "\1\u7300\1\u7400\u02fe\u1f00";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\4\1\5\16\0\4\6"+
    "\1\1\1\7\1\10\1\6\1\11\1\7\1\12\1\13"+
    "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23"+
    "\1\24\1\25\2\26\4\27\2\30\1\31\1\20\1\32"+
    "\1\33\1\34\1\20\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\2\45\1\47\1\50"+
    "\1\51\1\52\1\53\1\45\1\54\1\55\1\56\1\57"+
    "\1\60\1\61\1\62\2\45\1\63\1\64\1\65\1\7"+
    "\1\11\1\6\1\66\1\67\1\70\1\71\1\72\1\73"+
    "\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103"+
    "\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113"+
    "\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\20"+
    "\6\0\1\123\32\0\2\6\4\11\4\6\1\45\2\6"+
    "\1\0\7\6\1\45\4\6\1\45\5\6\27\45\1\6"+
    "\37\45\1\6\u01ca\45\4\6\14\45\16\6\5\45\7\6"+
    "\1\45\1\6\1\45\21\6\160\0\5\45\1\6\2\45"+
    "\2\6\4\45\1\6\1\45\6\6\1\45\1\6\3\45"+
    "\1\6\1\45\1\6\24\45\1\6\123\45\1\6\213\45"+
    "\1\6\5\0\2\6\246\45\1\6\46\45\2\6\1\45"+
    "\6\6\51\45\6\6\1\11\1\6\55\0\1\6\1\0"+
    "\1\6\2\0\1\6\2\0\1\6\1\0\10\6\33\45"+
    "\4\6\4\45\15\6\6\0\5\6\1\11\4\6\13\0"+
    "\1\6\1\0\3\6\53\45\37\0\4\6\2\45\1\0"+
    "\143\45\1\6\1\45\10\0\1\6\6\0\2\45\2\0"+
    "\1\6\4\0\2\45\12\0\3\45\2\6\1\45\17\6"+
    "\1\0\1\45\1\0\36\45\33\0\2\6\131\45\13\0"+
    "\1\45\16\6\12\0\41\45\11\0\2\45\4\6\1\45"+
    "\2\6\1\0\2\11\26\45\4\0\1\45\11\0\1\45"+
    "\3\0\1\45\5\0\22\6\31\45\3\0\4\6\13\45"+
    "\65\6\25\45\1\6\10\45\25\6\61\0\66\45\3\0"+
    "\1\45\22\0\1\45\7\0\12\45\2\0\2\6\12\0"+
    "\1\6\20\45\3\0\1\6\10\45\2\6\2\45\2\6"+
    "\26\45\1\6\7\45\1\6\1\45\3\6\4\45\2\6"+
    "\1\0\1\45\7\0\2\6\2\0\2\6\3\0\1\45"+
    "\10\6\1\0\4\6\2\45\1\6\3\45\2\0\2\6"+
    "\12\0\2\45\2\11\7\6\1\11\1\45\1\6\1\0"+
    "\2\6\3\0\1\6\6\45\4\6\2\45\2\6\26\45"+
    "\1\6\7\45\1\6\2\45\1\6\2\45\1\6\2\45"+
    "\2\6\1\0\1\6\5\0\4\6\2\0\2\6\3\0"+
    "\3\6\1\0\7\6\4\45\1\6\1\45\7\6\14\0"+
    "\3\45\1\0\13\6\3\0\1\6\11\45\1\6\3\45"+
    "\1\6\26\45\1\6\7\45\1\6\2\45\1\6\5\45"+
    "\2\6\1\0\1\45\10\0\1\6\3\0\1\6\3\0"+
    "\2\6\1\45\17\6\2\45\2\0\2\6\12\0\1\6"+
    "\1\11\7\6\1\45\6\0\1\6\3\0\1\6\10\45"+
    "\2\6\2\45\2\6\26\45\1\6\7\45\1\6\2\45"+
    "\1\6\5\45\2\6\1\0\1\45\7\0\2\6\2\0"+
    "\2\6\3\0\10\6\2\0\4\6\2\45\1\6\3\45"+
    "\2\0\2\6\12\0\1\6\1\45\20\6\1\0\1\45"+
    "\1\6\6\45\3\6\3\45\1\6\4\45\3\6\2\45"+
    "\1\6\1\45\1\6\2\45\3\6\2\45\3\6\3\45"+
    "\3\6\14\45\4\6\5\0\3\6\3\0\1\6\4\0"+
    "\2\6\1\45\6\6\1\0\16\6\12\0\11\6\1\11"+
    "\6\6\5\0\10\45\1\6\3\45\1\6\27\45\1\6"+
    "\20\45\3\6\1\45\7\0\1\6\3\0\1\6\4\0"+
    "\7\6\2\0\1\6\3\45\5\6\2\45\2\0\2\6"+
    "\12\0\20\6\1\45\3\0\1\6\10\45\1\6\3\45"+
    "\1\6\27\45\1\6\12\45\1\6\5\45\2\6\1\0"+
    "\1\45\7\0\1\6\3\0\1\6\4\0\7\6\2\0"+
    "\7\6\1\45\1\6\2\45\2\0\2\6\12\0\1\6"+
    "\2\45\15\6\4\0\1\6\10\45\1\6\3\45\1\6"+
    "\51\45\2\0\1\45\7\0\1\6\3\0\1\6\4\0"+
    "\1\45\5\6\3\45\1\0\7\6\3\45\2\0\2\6"+
    "\12\0\12\6\6\45\2\6\2\0\1\6\22\45\3\6"+
    "\30\45\1\6\11\45\1\6\1\45\2\6\7\45\3\6"+
    "\1\0\4\6\6\0\1\6\1\0\1\6\10\0\6\6"+
    "\12\0\2\6\2\0\15\6\60\45\1\0\2\45\7\0"+
    "\4\6\1\11\7\45\10\0\1\6\12\0\47\6\2\45"+
    "\1\6\1\45\1\6\1\124\2\45\1\124\1\45\1\6"+
    "\1\124\1\45\6\124\4\45\1\124\7\45\1\124\3\45"+
    "\1\6\1\45\1\6\1\45\2\124\2\45\1\124\4\45"+
    "\1\0\2\45\6\0\1\6\2\0\1\45\2\6\5\45"+
    "\1\6\1\45\1\6\6\0\2\6\12\0\2\6\4\45"+
    "\40\6\1\45\27\6\2\0\6\6\12\0\13\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\2\0\10\45\1\6"+
    "\44\45\4\6\24\0\1\6\2\0\5\45\13\0\1\6"+
    "\44\0\11\6\1\0\71\6\53\45\24\0\1\45\12\0"+
    "\6\6\6\45\4\0\4\45\3\0\1\45\3\0\2\45"+
    "\7\0\3\45\4\0\15\45\14\0\1\45\17\0\2\6"+
    "\46\45\1\6\1\45\5\6\1\45\2\6\53\45\1\6"+
    "\115\45\1\6\4\45\2\6\7\45\1\6\1\45\1\6"+
    "\4\45\2\6\51\45\1\6\4\45\2\6\41\45\1\6"+
    "\4\45\2\6\7\45\1\6\1\45\1\6\4\45\2\6"+
    "\17\45\1\6\71\45\1\6\4\45\2\6\103\45\2\6"+
    "\3\0\40\6\20\45\20\6\126\45\2\6\6\45\3\6"+
    "\u016c\45\2\6\21\45\1\6\32\45\5\6\113\45\3\6"+
    "\3\11\10\45\7\6\15\45\1\6\4\45\3\0\13\6"+
    "\22\45\3\0\13\6\22\45\2\0\14\6\15\45\1\6"+
    "\3\45\1\6\2\0\14\6\64\45\40\0\3\6\1\45"+
    "\3\6\1\11\1\45\1\0\2\6\12\0\41\6\4\0"+
    "\1\6\12\0\6\6\131\45\7\6\5\45\2\0\42\45"+
    "\1\0\1\45\5\6\106\45\12\6\37\45\1\6\14\0"+
    "\4\6\14\0\12\6\12\0\36\45\2\6\5\45\13\6"+
    "\54\45\4\6\32\45\6\6\12\0\46\6\27\45\5\0"+
    "\4\6\65\45\12\0\1\6\35\0\2\6\13\0\6\6"+
    "\12\0\15\6\1\45\10\6\16\0\102\6\5\0\57\45"+
    "\21\0\7\45\4\6\12\0\21\6\11\0\14\6\3\0"+
    "\36\45\15\0\2\45\12\0\54\45\16\0\14\6\44\45"+
    "\24\0\10\6\12\0\3\6\3\45\12\0\44\45\2\6"+
    "\11\45\7\6\53\45\2\6\3\45\20\6\3\0\1\6"+
    "\25\0\4\45\1\0\4\45\2\125\1\0\2\45\3\0"+
    "\1\124\5\6\300\45\72\0\1\6\5\0\26\45\2\6"+
    "\6\45\2\6\46\45\2\6\6\45\2\6\10\45\1\6"+
    "\1\45\1\6\1\45\1\6\1\45\1\6\37\45\2\6"+
    "\65\45\1\6\7\45\1\6\1\45\3\6\3\45\1\6"+
    "\7\45\3\6\4\45\2\6\6\45\4\6\15\45\5\6"+
    "\3\45\1\6\7\45\16\6\5\0\30\6\2\3\5\0"+
    "\20\6\2\11\23\6\1\11\13\6\5\0\1\6\12\0"+
    "\1\6\1\45\15\6\1\45\20\6\15\45\3\6\40\11"+
    "\20\6\15\0\4\6\1\0\3\6\14\0\21\6\1\45"+
    "\4\6\1\45\2\6\12\45\1\6\1\45\3\6\5\45"+
    "\6\6\1\45\1\6\1\45\1\6\1\45\1\6\4\45"+
    "\1\6\13\45\2\6\4\45\5\6\5\45\4\6\1\45"+
    "\21\6\43\11\2\45\4\11\u0177\6\57\45\1\6\57\45"+
    "\1\6\205\45\6\6\4\45\3\0\2\45\14\6\46\45"+
    "\1\6\1\45\5\6\1\45\2\6\70\45\7\6\1\45"+
    "\17\6\1\0\27\45\11\6\7\45\1\6\7\45\1\6"+
    "\7\45\1\6\7\45\1\6\7\45\1\6\7\45\1\6"+
    "\7\45\1\6\7\45\1\6\40\0\57\6\1\45\325\6"+
    "\2\45\1\11\31\6\11\11\6\0\1\6\5\45\2\6"+
    "\3\11\2\45\4\6\126\45\2\6\2\0\2\6\3\45"+
    "\1\6\132\45\1\6\4\45\5\6\53\45\1\6\136\45"+
    "\21\6\33\45\65\6\306\45\112\6\360\45\20\6\215\45"+
    "\103\6\56\45\2\6\15\45\3\6\20\45\12\0\2\45"+
    "\24\6\57\45\1\0\4\6\12\0\1\6\37\45\2\0"+
    "\106\45\12\11\2\0\45\6\11\45\2\6\147\45\2\6"+
    "\57\45\6\124\2\6\5\124\60\6\13\45\1\0\3\45"+
    "\1\0\4\45\1\0\27\45\5\0\20\6\1\11\7\6"+
    "\64\45\14\6\2\0\62\45\22\0\12\6\12\0\6\6"+
    "\22\0\6\45\3\6\1\45\1\6\2\45\13\0\34\45"+
    "\10\0\2\6\27\45\15\0\14\6\35\45\3\6\4\0"+
    "\57\45\16\0\16\6\1\45\12\0\6\6\5\45\1\0"+
    "\12\45\12\0\5\45\1\6\51\45\16\0\11\6\3\45"+
    "\1\0\10\45\2\0\2\6\12\0\6\6\27\45\3\6"+
    "\1\45\3\0\62\45\1\0\1\45\3\0\2\45\2\0"+
    "\5\45\2\0\1\45\1\0\1\45\30\6\3\45\2\6"+
    "\13\45\5\0\2\6\3\45\2\0\12\6\6\45\2\6"+
    "\6\45\2\6\6\45\11\6\7\45\1\6\7\45\1\6"+
    "\53\45\1\6\12\45\2\124\10\6\163\45\10\0\1\6"+
    "\2\0\2\6\12\0\6\6\244\45\14\6\27\45\4\6"+
    "\61\45\4\6\u0100\3\156\45\2\6\152\45\46\6\7\45"+
    "\14\6\5\45\5\6\1\45\1\0\12\45\1\6\15\45"+
    "\1\6\5\45\1\6\1\45\1\6\2\45\1\6\2\45"+
    "\1\6\154\45\41\6\153\45\22\6\100\45\2\6\66\45"+
    "\50\6\14\45\1\11\3\6\20\0\20\6\20\0\3\6"+
    "\2\11\30\6\3\11\31\6\1\11\6\6\5\45\1\6"+
    "\207\45\2\6\1\0\4\6\1\11\13\6\12\0\7\6"+
    "\32\45\4\6\1\11\1\6\32\45\13\6\131\45\3\6"+
    "\6\45\2\6\6\45\2\6\6\45\2\6\3\45\3\6"+
    "\2\11\3\6\2\11\22\6\3\0\4\6\14\45\1\6"+
    "\32\45\1\6\23\45\1\6\2\45\1\6\17\45\2\6"+
    "\16\45\42\6\173\45\105\6\65\11\210\6\1\0\202\6"+
    "\35\45\3\6\61\45\17\6\1\0\37\6\40\45\15\6"+
    "\24\45\1\11\10\45\1\11\5\6\46\45\5\0\5\6"+
    "\36\45\2\6\44\45\4\6\10\45\1\6\5\11\52\6"+
    "\236\45\2\6\12\0\6\6\44\45\4\6\44\45\4\6"+
    "\50\45\10\6\64\45\234\6\67\45\11\6\26\45\12\6"+
    "\10\45\230\6\6\45\2\6\1\45\1\6\54\45\1\6"+
    "\2\45\3\6\1\45\2\6\27\45\12\6\27\45\11\6"+
    "\37\45\101\6\23\45\1\6\2\45\12\6\26\45\12\6"+
    "\32\45\106\6\70\45\6\6\2\45\100\6\1\45\3\0"+
    "\1\6\2\0\5\6\4\0\4\45\1\6\3\45\1\6"+
    "\35\45\2\6\3\0\4\6\1\0\40\6\35\45\3\6"+
    "\35\45\43\6\10\45\1\6\34\45\2\0\31\6\66\45"+
    "\12\6\26\45\12\6\23\45\15\6\22\45\156\6\111\45"+
    "\67\6\63\45\15\6\63\45\15\6\44\45\4\0\10\6"+
    "\12\0\306\6\35\45\12\6\1\45\10\6\26\45\13\0"+
    "\217\6\27\124\11\6\3\0\65\45\17\0\37\6\12\0"+
    "\17\6\4\0\55\45\13\0\2\6\1\0\17\6\1\0"+
    "\2\6\31\45\7\6\12\0\6\6\3\0\44\45\16\0"+
    "\1\6\12\0\4\6\1\45\2\0\11\6\43\45\1\0"+
    "\2\6\1\45\11\6\3\0\60\45\16\0\4\45\4\6"+
    "\4\0\3\6\12\0\1\45\1\6\1\45\43\6\22\45"+
    "\1\6\31\45\14\0\6\6\1\0\101\6\7\45\1\6"+
    "\1\45\1\6\4\45\1\6\17\45\1\6\12\45\7\6"+
    "\57\45\14\0\5\6\12\0\6\6\4\0\1\6\10\45"+
    "\2\6\2\45\2\6\26\45\1\6\7\45\1\6\2\45"+
    "\1\6\5\45\1\6\2\0\1\45\7\0\2\6\2\0"+
    "\2\6\3\0\2\6\1\45\6\6\1\0\5\6\5\45"+
    "\2\0\2\6\7\0\3\6\5\0\213\6\65\45\22\0"+
    "\4\45\5\6\12\0\4\6\1\0\1\124\40\6\60\45"+
    "\24\0\2\45\1\6\1\45\10\6\12\0\246\6\57\45"+
    "\7\0\2\6\11\0\27\6\4\45\2\0\42\6\60\45"+
    "\21\0\3\6\1\45\13\6\12\0\46\6\53\45\15\0"+
    "\1\124\7\6\12\0\66\6\33\45\2\6\17\0\4\6"+
    "\12\0\306\6\54\45\17\0\145\6\100\45\12\0\25\6"+
    "\1\45\240\6\10\124\2\6\47\124\20\6\1\124\1\6"+
    "\1\124\34\6\1\45\12\0\50\45\7\0\1\45\4\0"+
    "\10\6\1\0\10\6\1\45\13\0\50\45\2\124\4\45"+
    "\20\0\3\6\1\45\42\6\71\45\7\6\11\45\1\6"+
    "\45\45\10\0\1\6\10\0\1\45\17\6\12\0\30\6"+
    "\36\45\2\6\26\0\1\6\16\0\111\6\7\45\1\6"+
    "\2\45\1\6\46\45\6\0\3\6\1\0\1\6\2\0"+
    "\1\6\7\0\1\45\1\0\10\6\12\0\6\6\6\45"+
    "\1\6\2\45\1\6\40\45\5\0\1\6\2\0\1\6"+
    "\5\0\1\45\7\6\12\0\u0136\6\23\45\4\0\11\6"+
    "\232\45\146\6\157\11\21\6\304\45\274\6\57\45\321\6"+
    "\107\45\271\6\71\45\7\6\37\45\1\6\12\0\146\6"+
    "\36\45\2\6\5\0\13\6\60\45\7\0\11\6\4\45"+
    "\14\6\12\0\11\6\25\45\5\6\23\45\260\6\100\45"+
    "\200\6\105\45\6\124\5\6\1\45\56\0\20\6\4\0"+
    "\15\45\100\6\2\45\1\6\1\124\34\6\362\45\6\124"+
    "\10\6\363\45\15\6\37\45\61\6\3\124\21\6\4\124"+
    "\10\6\u018c\45\4\6\153\45\5\6\15\45\3\6\11\45"+
    "\7\6\12\45\3\6\2\0\1\6\4\0\301\6\5\0"+
    "\3\6\26\0\2\6\7\0\36\6\4\0\224\6\3\0"+
    "\273\6\125\45\1\6\107\45\1\6\2\45\2\6\1\45"+
    "\2\6\2\45\2\6\4\45\1\6\14\45\1\6\1\45"+
    "\1\6\7\45\1\6\101\45\1\6\4\45\2\6\10\45"+
    "\1\6\7\45\1\6\34\45\1\6\4\45\1\6\5\45"+
    "\1\6\1\45\3\6\7\45\1\6\u0154\45\2\6\31\45"+
    "\1\6\31\45\1\6\37\45\1\6\31\45\1\6\37\45"+
    "\1\6\31\45\1\6\37\45\1\6\31\45\1\6\37\45"+
    "\1\6\31\45\1\6\10\45\2\6\151\0\4\6\62\0"+
    "\10\6\1\0\16\6\1\0\26\6\5\0\1\6\17\0"+
    "\120\6\7\0\1\6\21\0\2\6\7\0\1\6\2\0"+
    "\1\6\5\0\325\6\55\124\12\6\7\124\20\6\1\124"+
    "\u0171\6\54\124\24\6\305\45\13\6\7\0\51\6\104\45"+
    "\7\0\1\124\4\6\12\0\u0156\6\1\11\117\6\4\45"+
    "\1\6\33\45\1\6\2\45\1\6\1\45\2\6\1\45"+
    "\1\6\12\45\1\6\4\45\1\6\1\45\1\6\1\45"+
    "\6\6\1\45\4\6\1\45\1\6\1\45\1\6\1\45"+
    "\1\6\3\45\1\6\2\45\1\6\1\45\2\6\1\45"+
    "\1\6\1\45\1\6\1\45\1\6\1\45\1\6\1\45"+
    "\1\6\2\45\1\6\1\45\2\6\4\45\1\6\7\45"+
    "\1\6\4\45\1\6\4\45\1\6\1\45\1\6\12\45"+
    "\1\6\21\45\5\6\3\45\1\6\5\45\1\6\21\45"+
    "\104\6\327\45\51\6\65\45\13\6\336\45\2\6\u0182\45"+
    "\16\6\u0131\45\37\6\36\45\343\6\1\0\36\6\140\0"+
    "\200\6\360\0\20\6";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[29952];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\5\0\3\1\1\2\1\3\1\4\1\2\1\5\1\6"+
    "\1\7\5\2\2\10\2\2\20\4\1\11\1\12\20\4"+
    "\1\13\1\2\1\14\1\15\2\16\1\17\1\1\1\15"+
    "\1\1\2\20\1\21\2\22\1\15\1\10\1\0\1\23"+
    "\5\10\2\0\1\2\42\4\1\24\10\4\1\24\23\4"+
    "\1\25\2\15\1\26\1\15\1\0\1\27\2\23\1\10"+
    "\1\0\3\10\57\4\1\24\24\4\2\0\2\10\3\4"+
    "\1\30\62\4\2\10\5\4\1\30\2\4\1\31\26\4"+
    "\1\24\11\4\1\24\1\4\2\10\21\4\1\30\3\4"+
    "\1\30\14\4\2\10\25\4\1\32\7\4\2\10\27\4"+
    "\2\10\4\4\1\33\21\4\2\10\20\4\1\10\1\0"+
    "\11\4\1\10\1\0\10\4\1\10\1\0\6\4\1\10"+
    "\1\0\3\4\1\10\1\0\1\4\1\10\1\0\1\10"+
    "\1\0\1\10\1\0\4\10";

  private static int [] zzUnpackAction() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\126\0\254\0\u0102\0\u0158\0\u01ae\0\u0204\0\u025a"+
    "\0\u02b0\0\u01ae\0\u0306\0\u035c\0\u01ae\0\u01ae\0\u01ae\0\u03b2"+
    "\0\u01ae\0\u0408\0\u045e\0\u04b4\0\u050a\0\u0560\0\u05b6\0\u060c"+
    "\0\u0662\0\u06b8\0\u070e\0\u0764\0\u07ba\0\u0810\0\u0866\0\u08bc"+
    "\0\u0912\0\u0968\0\u09be\0\u0a14\0\u0a6a\0\u0ac0\0\u0b16\0\u0b6c"+
    "\0\u01ae\0\u01ae\0\u0bc2\0\u0c18\0\u0c6e\0\u0cc4\0\u0d1a\0\u0d70"+
    "\0\u0dc6\0\u0e1c\0\u0e72\0\u0ec8\0\u0f1e\0\u0f74\0\u0fca\0\u1020"+
    "\0\u1076\0\u10cc\0\u01ae\0\u1122\0\u01ae\0\u1178\0\u01ae\0\u11ce"+
    "\0\u01ae\0\u1224\0\u127a\0\u12d0\0\u01ae\0\u1326\0\u01ae\0\u01ae"+
    "\0\u1326\0\u137c\0\u13d2\0\u1428\0\u147e\0\u14d4\0\u152a\0\u1580"+
    "\0\u15d6\0\u01ae\0\u162c\0\u1682\0\u16d8\0\u172e\0\u1784\0\u17da"+
    "\0\u1830\0\u1886\0\u18dc\0\u1932\0\u1988\0\u19de\0\u1a34\0\u1a8a"+
    "\0\u1ae0\0\u1b36\0\u1b8c\0\u1be2\0\u1c38\0\u1c8e\0\u1ce4\0\u1d3a"+
    "\0\u1d90\0\u1de6\0\u1e3c\0\u1e92\0\u1ee8\0\u1f3e\0\u1f94\0\u1fea"+
    "\0\u2040\0\u2096\0\u20ec\0\u2142\0\u2198\0\u21ee\0\u2244\0\u229a"+
    "\0\u22f0\0\u2346\0\u239c\0\u23f2\0\u2448\0\u249e\0\u24f4\0\u254a"+
    "\0\u0306\0\u25a0\0\u25f6\0\u264c\0\u26a2\0\u26f8\0\u274e\0\u27a4"+
    "\0\u27fa\0\u2850\0\u28a6\0\u28fc\0\u2952\0\u29a8\0\u29fe\0\u2a54"+
    "\0\u2aaa\0\u2b00\0\u2b56\0\u2bac\0\u01ae\0\u2c02\0\u2c58\0\u01ae"+
    "\0\u01ae\0\u2cae\0\u2d04\0\u01ae\0\u2d5a\0\u2db0\0\u2e06\0\u2e5c"+
    "\0\u2eb2\0\u2f08\0\u2f5e\0\u2fb4\0\u300a\0\u3060\0\u30b6\0\u310c"+
    "\0\u3162\0\u31b8\0\u320e\0\u3264\0\u32ba\0\u3310\0\u3366\0\u33bc"+
    "\0\u3412\0\u3468\0\u34be\0\u3514\0\u356a\0\u35c0\0\u3616\0\u366c"+
    "\0\u36c2\0\u3718\0\u376e\0\u37c4\0\u381a\0\u3870\0\u38c6\0\u391c"+
    "\0\u3972\0\u39c8\0\u3a1e\0\u3a74\0\u3aca\0\u3b20\0\u3b76\0\u3bcc"+
    "\0\u3c22\0\u3c78\0\u3cce\0\u3d24\0\u3d7a\0\u3dd0\0\u3e26\0\u3e7c"+
    "\0\u3ed2\0\u3f28\0\u3f7e\0\u3fd4\0\u402a\0\u4080\0\u40d6\0\u412c"+
    "\0\u4182\0\u41d8\0\u422e\0\u4284\0\u42da\0\u4330\0\u4386\0\u43dc"+
    "\0\u4432\0\u4488\0\u44de\0\u4534\0\u458a\0\u45e0\0\u4636\0\u2d04"+
    "\0\u468c\0\u46e2\0\u4738\0\u478e\0\u47e4\0\u0306\0\u483a\0\u4890"+
    "\0\u48e6\0\u493c\0\u4992\0\u49e8\0\u4a3e\0\u4a94\0\u4aea\0\u4b40"+
    "\0\u4b96\0\u4bec\0\u4c42\0\u4c98\0\u4cee\0\u4d44\0\u4d9a\0\u4df0"+
    "\0\u4e46\0\u4e9c\0\u4ef2\0\u4f48\0\u4f9e\0\u4ff4\0\u504a\0\u50a0"+
    "\0\u50f6\0\u514c\0\u51a2\0\u51f8\0\u524e\0\u52a4\0\u52fa\0\u5350"+
    "\0\u53a6\0\u53fc\0\u5452\0\u54a8\0\u54fe\0\u5554\0\u55aa\0\u5600"+
    "\0\u5656\0\u56ac\0\u5702\0\u5758\0\u57ae\0\u5804\0\u585a\0\u58b0"+
    "\0\u5906\0\u595c\0\u59b2\0\u5a08\0\u5a5e\0\u5ab4\0\u5b0a\0\u5b60"+
    "\0\u5bb6\0\u5c0c\0\u0306\0\u5c62\0\u5cb8\0\u5d0e\0\u5d64\0\u5dba"+
    "\0\u5e10\0\u5e66\0\u5ebc\0\u5f12\0\u5f68\0\u5fbe\0\u6014\0\u606a"+
    "\0\u60c0\0\u6116\0\u616c\0\u61c2\0\u6218\0\u626e\0\u62c4\0\u631a"+
    "\0\u6370\0\u63c6\0\u641c\0\u6472\0\u64c8\0\u651e\0\u6574\0\u65ca"+
    "\0\u6620\0\u6676\0\u66cc\0\u4432\0\u6722\0\u6778\0\u67ce\0\u6824"+
    "\0\u687a\0\u68d0\0\u6926\0\u697c\0\u69d2\0\u6a28\0\u6a7e\0\u6ad4"+
    "\0\u6b2a\0\u6b80\0\u6bd6\0\u6c2c\0\u6c82\0\u6cd8\0\u6d2e\0\u6d84"+
    "\0\u6dda\0\u6e30\0\u6e86\0\u6edc\0\u6f32\0\u6f88\0\u6fde\0\u7034"+
    "\0\u708a\0\u70e0\0\u7136\0\u718c\0\u71e2\0\u7238\0\u728e\0\u72e4"+
    "\0\u733a\0\u7390\0\u73e6\0\u743c\0\u7492\0\u74e8\0\u753e\0\u7594"+
    "\0\u75ea\0\u7640\0\u7696\0\u76ec\0\u7742\0\u7798\0\u77ee\0\u7844"+
    "\0\u789a\0\u78f0\0\u7946\0\u799c\0\u79f2\0\u7a48\0\u7a9e\0\u7af4"+
    "\0\u0306\0\u7b4a\0\u7ba0\0\u7bf6\0\u7c4c\0\u7ca2\0\u7cf8\0\u7d4e"+
    "\0\u7da4\0\u7dfa\0\u7e50\0\u7ea6\0\u7efc\0\u7f52\0\u7fa8\0\u7ffe"+
    "\0\u8054\0\u80aa\0\u8100\0\u8156\0\u81ac\0\u8202\0\u8258\0\u82ae"+
    "\0\u8304\0\u835a\0\u83b0\0\u8406\0\u845c\0\u84b2\0\u8508\0\u855e"+
    "\0\u85b4\0\u860a\0\u8660\0\u86b6\0\u870c\0\u8762\0\u87b8\0\u0306"+
    "\0\u880e\0\u8864\0\u88ba\0\u8910\0\u8966\0\u89bc\0\u8a12\0\u8a68"+
    "\0\u8abe\0\u8b14\0\u8b6a\0\u8bc0\0\u8c16\0\u8c6c\0\u8cc2\0\u8d18"+
    "\0\u8d6e\0\u8dc4\0\u8e1a\0\u8e70\0\u8ec6\0\u8f1c\0\u8f72\0\u8fc8"+
    "\0\u901e\0\u9074\0\u90ca\0\u9120\0\u9176\0\u91cc\0\u9222\0\u9278"+
    "\0\u92ce\0\u9324\0\u937a\0\u93d0\0\u9426\0\u947c\0\u94d2\0\u9528"+
    "\0\u957e\0\u95d4\0\u962a\0\u9680\0\u96d6\0\u972c\0\u9782\0\u97d8"+
    "\0\u982e\0\u9884\0\u98da\0\u9930\0\u9986\0\u99dc\0\u9a32\0\u9a88"+
    "\0\u9ade\0\u9b34\0\u9b8a\0\u9be0\0\u9c36\0\u9c8c\0\u9ce2\0\u9d38"+
    "\0\u9d8e\0\u9de4\0\u9e3a\0\u9e90\0\u9ee6\0\u9f3c\0\u9f92\0\u9fe8"+
    "\0\ua03e\0\ua094\0\ua0ea\0\ua140\0\ua196\0\ua1ec\0\ua242\0\ua298"+
    "\0\ua2ee\0\ua344";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\6\1\7\1\6\1\0\1\7\1\10\1\6\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\11\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\4\26\1\21\1\27"+
    "\1\11\1\30\1\6\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\2\13\1\37\2\13\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\1\13\1\51\1\6"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61"+
    "\1\13\1\62\2\13\1\63\1\13\1\64\1\13\1\65"+
    "\1\13\1\66\1\67\1\70\1\13\1\71\1\72\3\13"+
    "\1\73\1\74\1\75\1\0\2\6\2\76\1\77\2\76"+
    "\1\100\2\76\1\101\53\76\1\102\41\76\2\103\1\77"+
    "\2\103\1\100\5\103\1\101\50\103\1\104\41\103\3\105"+
    "\3\0\10\105\1\106\16\105\1\107\65\105\1\0\2\105"+
    "\3\110\3\0\10\110\1\111\17\110\25\112\3\110\32\112"+
    "\3\110\1\0\2\112\127\0\1\7\2\0\1\7\123\0"+
    "\1\6\156\0\1\21\72\0\1\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\32\13\3\0\1\13\1\0"+
    "\1\13\12\0\1\21\20\0\1\21\111\0\1\21\13\0"+
    "\1\21\113\0\1\21\11\0\1\21\116\0\5\113\113\0"+
    "\1\114\4\0\1\115\7\0\1\21\114\0\1\113\1\0"+
    "\1\116\1\117\2\120\1\121\10\0\1\122\1\123\1\122"+
    "\3\0\1\122\12\0\1\124\6\0\1\122\1\123\1\122"+
    "\5\0\1\122\13\0\1\124\32\0\1\113\1\0\5\26"+
    "\10\0\1\122\1\123\1\122\3\0\1\122\21\0\1\122"+
    "\1\123\1\122\5\0\1\122\56\0\1\11\1\21\125\0"+
    "\1\21\1\125\71\0\1\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\21\13\1\126\10\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\16\13\1\127\11\13\1\130\1\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\7\13\1\131\3\13\1\132\2\13\1\133\13\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\16\13\1\134\13\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\16\13"+
    "\1\135\6\13\3\0\27\13\1\136\2\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\137\16\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\13\13"+
    "\1\140\1\13\1\141\14\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\142\11\13\1\143\5\13\1\144\5\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\13\1\145\30\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\146"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\24\13\1\147\5\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\4\13\1\150\2\13\1\151\13\13\1\152"+
    "\6\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\7\13\1\153\22\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\15\13\1\154\14\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\16\13\1\155\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\1\156\24\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\1\13\1\157\30\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\16\13\1\160\2\13\1\161\6\13\1\162\1\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\1\163\6\13\1\164\3\13\1\165"+
    "\2\13\1\166\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\4\13\1\167"+
    "\11\13\1\170\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\13\13\1\171"+
    "\1\13\1\172\11\13\1\173\2\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\1\174\7\13\1\175\2\13\1\176\2\13\1\177\13\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\16\13\1\200\13\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\5\13\1\201\6\13\1\202\1\203\14\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\16\13\1\204\13\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\1\205\3\13\1\206\17\13\1\207\5\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\210\20\13\1\211\2\13\1\212\5\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\4\13\1\213\25\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\7\13\1\214\13\13\1\215\1\216\1\13\1\217\1\13"+
    "\1\220\1\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\7\13\1\221\11\13"+
    "\1\222\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\16\13\1\223\13\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\7\13\1\224\22\13\3\0\1\13"+
    "\1\0\1\13\33\0\1\21\65\0\1\21\4\0\2\76"+
    "\1\0\2\76\1\0\2\76\1\0\53\76\1\0\41\76"+
    "\2\0\1\77\123\0\2\225\4\0\16\225\3\226\1\227"+
    "\73\225\1\0\2\225\2\103\1\0\2\103\1\0\5\103"+
    "\1\0\50\103\1\0\41\103\2\225\4\0\115\225\1\0"+
    "\2\225\23\0\1\230\133\0\1\231\4\0\25\112\3\0"+
    "\32\112\4\0\2\112\24\0\5\113\10\0\1\122\1\123"+
    "\1\122\25\0\1\122\1\123\1\122\32\0\16\232\1\233"+
    "\107\232\2\115\1\234\2\115\1\235\120\115\22\0\1\113"+
    "\1\0\1\116\1\117\2\120\1\121\10\0\1\122\1\123"+
    "\1\122\3\0\1\122\21\0\1\122\1\123\1\122\5\0"+
    "\1\122\46\0\1\113\1\0\4\120\1\121\10\0\1\122"+
    "\1\123\1\122\3\0\1\122\21\0\1\122\1\123\1\122"+
    "\5\0\1\122\46\0\1\113\1\0\4\236\1\121\10\0"+
    "\1\122\1\123\1\122\3\0\1\122\21\0\1\122\1\123"+
    "\1\122\5\0\1\122\46\0\1\113\1\0\5\121\10\0"+
    "\1\122\1\123\1\122\25\0\1\122\1\123\1\122\51\0"+
    "\1\237\1\0\1\237\2\0\5\240\121\0\1\241\4\242"+
    "\5\0\6\242\22\0\6\242\65\0\1\21\1\11\71\0"+
    "\1\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\10\13\1\243\10\13\1\244\10\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\16\13\1\245\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\23\13\1\246"+
    "\6\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\1\247\31\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\250\15\13\1\251\13\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\14\13\1\252\15\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\24\13\1\253"+
    "\5\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\16\13\1\254\6\13\3\0\32\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\2\13\1\255\27\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\16\13\1\256\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\13\13\1\257"+
    "\16\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\3\13\1\260\16\13\1\261"+
    "\1\262\6\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\6\13\1\263\23\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\17\13\1\264\5\13\3\0\32\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\265\1\266\15\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\11\13\1\267\20\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\2\13\1\270"+
    "\27\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\15\13\1\271\14\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\2\13\1\272\16\13\1\273\10\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\16\13\1\274\13\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\21\13\1\275\10\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\21\13\1\276"+
    "\10\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\22\13\1\277\7\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\10\13\1\300\21\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\16\13\1\301"+
    "\6\13\3\0\32\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\22\13\1\302"+
    "\7\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\16\13\1\303\13\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\4\13\1\304\25\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\23\13\1\305\6\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\22\13\1\305"+
    "\1\306\6\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\1\177\31\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\1\307\31\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\15\13"+
    "\1\310\14\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\5\13\1\311\24\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\24\13\1\312\5\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\22\13\1\305\7\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\24\13"+
    "\1\313\5\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\314\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\13\13\1\171\16\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\15\13\1\315\14\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\16\13"+
    "\1\316\13\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\21\13\1\201\10\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\317\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\17\13\1\320\12\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\22\13"+
    "\1\321\1\322\6\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\15\13\1\323"+
    "\14\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\23\13\1\324\6\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\26\13\1\201\3\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\13\13\1\325\16\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\2\13\1\326"+
    "\27\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\10\13\1\327\5\13\1\330"+
    "\13\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\1\13\1\331\30\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\23\13\1\332\6\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\16\13\1\333\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\334\20\13"+
    "\1\335\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\17\13\1\336\12\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\10\13\1\337\21\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\15\13\1\340\14\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\10\13"+
    "\1\341\10\13\1\342\10\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\343"+
    "\23\13\1\305\3\13\1\201\1\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\10\13\1\344\2\13\1\345\16\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\10\13\1\346\21\13\3\0\1\13\1\0\1\13\24\0"+
    "\4\227\122\0\4\231\76\0\16\232\1\347\107\232\16\0"+
    "\1\350\4\0\1\234\104\0\1\234\145\0\1\113\1\0"+
    "\4\351\1\121\10\0\1\122\1\123\1\122\3\0\1\122"+
    "\21\0\1\122\1\123\1\122\5\0\1\122\50\0\5\240"+
    "\121\0\5\240\10\0\1\122\1\0\1\122\25\0\1\122"+
    "\1\0\1\122\56\0\1\241\4\242\5\0\6\242\3\0"+
    "\1\122\16\0\6\242\5\0\1\122\50\0\5\352\5\0"+
    "\6\352\3\0\1\122\16\0\6\352\5\0\1\122\24\0"+
    "\1\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\23\13\1\353\6\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\354\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\13\13\1\355\16\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\4\13\1\356\25\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\21\13"+
    "\1\357\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\22\13\1\360\7\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\15\13\1\361\14\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\17\13\1\362\12\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\13"+
    "\1\363\30\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\14\13\1\364\10\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\4\13\1\365\25\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\366\31\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\4\13\1\367"+
    "\25\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\4\13\1\370\25\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\23\13\1\371\6\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\372\25\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\373\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\24\13\1\374\5\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\375\16\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\13"+
    "\1\376\30\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\377\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\12\13\1\u0100\17\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\15\13\1\u0101\5\13\1\u0102\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\24\13\1\u0103\5\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\10\13"+
    "\1\u0104\21\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\21\13\1\366\10\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\10\13\1\u0105\21\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\4\13\1\u0106\11\13\1\u0107\13\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\24\13\1\u0108\5\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\3\13"+
    "\1\356\26\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\13\13\1\u0109\11\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\u010a\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\u010b\16\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\u010c"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\4\13\1\201\25\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\2\13\1\u010d\27\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\22\13\1\341\7\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\22\13\1\u010e"+
    "\1\u010f\6\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\1\u0110\31\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\1\13\1\346\30\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\14\13\1\201\15\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\4\13\1\u0111"+
    "\25\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\1\u0112\31\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\u010e\31\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\16\13\1\201"+
    "\13\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\13\13\1\u0113\2\13\1\333"+
    "\13\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\23\13\1\u0114\6\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\4\13\1\u0115\25\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\6\13\1\201\23\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\10\13\1\u0116"+
    "\21\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\13\13\1\201\16\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\12\13\1\u0117\17\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\25\13\1\u0118\4\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\23\13\1\u0119"+
    "\6\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\13\13\1\u011a\16\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\24\13\1\u011b\5\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\21\13\1\u010e\10\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\23\13\1\u011a"+
    "\6\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\10\13\1\u011c\21\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\4\13\1\177\25\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\23\13\1\306\6\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\2\13\1\u011d"+
    "\27\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\22\13\1\201\7\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\16\13\1\u011e\13\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\15\13\1\u011f\14\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\3\13\1\201"+
    "\26\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\1\u0120\31\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\305\16\13\3\0\1\13\1\0\1\13"+
    "\16\232\1\347\4\232\1\234\102\232\22\0\1\113\1\0"+
    "\4\u0121\1\121\10\0\1\122\1\123\1\122\3\0\1\122"+
    "\21\0\1\122\1\123\1\122\5\0\1\122\50\0\5\u0122"+
    "\5\0\6\u0122\3\0\1\122\16\0\6\u0122\5\0\1\122"+
    "\24\0\1\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\7\13\1\u0123\22\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\30\13"+
    "\1\u0124\1\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u0125\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\17\13\1\u0126\5\13\3\0\1\u0127\31\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\22\13\1\u0128\7\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\u0129\25\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\u012a\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\13\13\1\246\16\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\16\13"+
    "\1\u012b\6\13\3\0\32\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\17\13"+
    "\1\u012c\12\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\356\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\6\13\1\u012d\23\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\27\13\1\u012e\2\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\u012f"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\6\13\1\u0130\12\13\1\u0131"+
    "\10\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\23\13\1\u0132\6\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\2\13\1\u0133\27\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\15\13\1\u0134"+
    "\7\13\3\0\32\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\4\13\1\u0135"+
    "\25\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\2\13\1\366\27\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\1\u0136\31\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\253"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\10\13\1\u0137\21\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\21\13\1\u0138\10\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\1\u0139\31\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\15\13\1\u013a\14\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\1\300\31\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\26\13\1\u0101\3\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\17\13\1\u013b"+
    "\12\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\10\13\1\u013c\14\13\3\0\32\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\21\13\1\u013d\10\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\u013e\25\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\12\13\1\201"+
    "\17\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\7\13\1\201\22\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\23\13\1\201\6\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\10\13\1\u013f\21\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\24\13\1\u0140"+
    "\5\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\15\13\1\u0141\14\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\13\13\1\u0142\16\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\u0143\25\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\u0144\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\21\13\1\u0145\10\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\25\13\1\305\4\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\u0146"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\1\162\31\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\4\13\1\u0147\25\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\10\13"+
    "\1\u0148\21\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\21\13\1\u0149\10\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\2\13\1\u014a\27\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\7\13\1\u014b\22\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\26\13"+
    "\1\u014c\3\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\22\13\1\u014d\7\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\224\6\13\3\0\1\13"+
    "\1\0\1\13\22\0\1\113\1\0\4\u014e\1\121\10\0"+
    "\1\122\1\123\1\122\3\0\1\122\21\0\1\122\1\123"+
    "\1\122\5\0\1\122\50\0\5\u014f\5\0\6\u014f\3\0"+
    "\1\122\16\0\6\u014f\5\0\1\122\24\0\1\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\14\13\1\u0150"+
    "\15\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\10\13\1\u0151\14\13\3\0\32\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\1\u0152\31\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\u0153\25\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\2\13\1\u0154\27\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\2\13\1\u0155\10\13\1\u0156\11\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\13\13\1\u0157\11\13\3\0\1\253\31\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\21\13\1\u0101\10\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\23\13\1\u0158\6\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\u0159\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\14\13\1\u015a\10\13\3\0\32\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\15\13\1\u015b\14\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\u015c\25\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\21\13\1\u015d\10\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\10\13\1\u015e\21\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\7\13\1\u015f\22\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\16\13"+
    "\1\u0160\13\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\21\13\1\u0161\10\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\6\13\1\246\23\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\14\13\1\u0162\15\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\10\13"+
    "\1\u0163\21\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\13\13\1\u0164\16\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\6\13\1\u0165\23\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\17\13\1\u0166\12\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\13\13\1\u0167\11\13"+
    "\3\0\32\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\1\u0168\31\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\1\u0149\31\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\15\13"+
    "\1\u0169\14\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\13\13\1\u010e\16\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\3\13\1\341\26\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\u016a\16\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\14\13"+
    "\1\u016b\15\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\15\13\1\u016c\14\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\5\13\1\u016d\24\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\6\13\1\305\23\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\2\13"+
    "\1\u016e\27\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\2\13\1\201\27\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\15\13\1\201\14\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\23\13\1\u016f\6\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\21\13"+
    "\1\u0170\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\10\13\1\u0171\21\13"+
    "\3\0\1\13\1\0\1\13\22\0\1\113\1\0\4\u0172"+
    "\1\121\10\0\1\122\1\123\1\122\3\0\1\122\21\0"+
    "\1\122\1\123\1\122\5\0\1\122\50\0\5\u0173\5\0"+
    "\6\u0173\3\0\1\122\16\0\6\u0173\5\0\1\122\24\0"+
    "\1\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\u0174\25\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\15\13\1\u0175"+
    "\14\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\15\13\1\356\14\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\20\13\1\u0176\11\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\23\13\1\u0130\6\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\u0177\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\16\13\1\u0178\13\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\16\13\1\u0179\13\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\10\13"+
    "\1\u017a\21\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\13\13\1\u017b\16\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\24\13\1\u017c\5\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\23\13\1\u017d\6\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\21\13"+
    "\1\356\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\24\13\1\u017e\5\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\25\13\1\u017f\4\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\5\13"+
    "\1\u0180\4\13\1\u0181\12\13\3\0\32\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\10\13\1\u0182\21\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\5\13\1\u0183\17\13"+
    "\3\0\32\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u0184\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\u0185\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\10\13\1\u0186\21\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\1\13\1\u0187\6\13"+
    "\1\u0151\14\13\3\0\32\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\16\13"+
    "\1\u0188\13\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\6\13\1\u0189\16\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\2\13\1\u010e\27\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\24\13\1\305\5\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\30\13"+
    "\1\201\1\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u018a\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\2\13\1\u018b\27\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\u018c\31\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\23\13\1\u018d"+
    "\6\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\5\13\1\u018e\24\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\16\13\1\u018f\13\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\u0190\25\13\3\0\1\13\1\0\1\13\22\0"+
    "\1\113\1\0\4\u0191\1\121\10\0\1\122\1\123\1\122"+
    "\3\0\1\122\21\0\1\122\1\123\1\122\5\0\1\122"+
    "\50\0\5\u0192\5\0\6\u0192\3\0\1\122\16\0\6\u0192"+
    "\5\0\1\122\24\0\1\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\u0193\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\3\13\1\260\26\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\24\13"+
    "\1\u0194\5\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\22\13\1\u0195\7\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\u0196\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\23\13\1\u0197\6\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\16\13"+
    "\1\u0198\13\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\1\u0199\16\13\1\u019a\1\u019b\4\13"+
    "\3\0\32\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\u019c\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\10\13\1\u019d\21\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\17\13\1\u019e\12\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\u019f\25\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\10\13\1\u01a0\21\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\4\13\1\u01a1\25\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\15\13\1\u01a2\14\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\16\13"+
    "\1\u01a3\13\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\4\13\1\u01a4\20\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\30\13\1\u0184\1\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\31\13\1\u0101\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\24\13\1\u01a5"+
    "\5\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\21\13\1\u01a6\10\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\15\13\1\u01a7\14\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\4\13\1\u01a8\25\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\2\13\1\305"+
    "\27\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\4\13\1\344\25\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\17\13\1\201\12\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\15\13\1\u01a9\14\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\15\13\1\u010e"+
    "\14\13\3\0\1\13\1\0\1\13\22\0\1\113\1\0"+
    "\4\u01aa\1\121\10\0\1\122\1\123\1\122\3\0\1\122"+
    "\21\0\1\122\1\123\1\122\5\0\1\122\50\0\5\u01ab"+
    "\5\0\6\u01ab\3\0\1\122\16\0\6\u01ab\5\0\1\122"+
    "\24\0\1\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\10\13\1\u01ac\21\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\u01ad\25\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\u0184\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\5\13\1\u01ae\17\13\3\0\32\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\17\13"+
    "\1\u01af\5\13\3\0\32\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\15\13"+
    "\1\u01b0\14\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\2\13\1\u01b1\16\13"+
    "\1\u01b2\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\u01b3\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\7\13\1\u01b4\22\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\14\13"+
    "\1\u01b5\10\13\3\0\32\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\u01b6"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\23\13\1\u01b7\6\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\1\u01b8\24\13\3\0\32\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\u01b9\25\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\u01ba\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\u01bb\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\21\13\1\u01bc\10\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\27\13"+
    "\1\136\2\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\5\13\1\u01bd\2\13"+
    "\1\u01be\21\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\23\13\1\u01bf\6\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\23\13\1\341\6\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\16\13\1\u01c0\13\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\10\13"+
    "\1\u01c1\21\13\3\0\1\13\1\0\1\13\22\0\1\113"+
    "\1\0\4\u01c2\1\121\10\0\1\122\1\123\1\122\3\0"+
    "\1\122\21\0\1\122\1\123\1\122\5\0\1\122\50\0"+
    "\5\u01c3\5\0\6\u01c3\3\0\1\122\16\0\6\u01c3\5\0"+
    "\1\122\24\0\1\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\2\13\1\u0184\27\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\15\13\1\u01c4\14\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\16\13\1\u01c5"+
    "\13\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\24\13\1\u01c6\5\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\2\13\1\u01c7\27\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\6\13\1\u01c8\23\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\1\u01c9\31\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\21\13\1\u01ca\10\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\5\13\1\u01cb\24\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\23\13"+
    "\1\u01cc\6\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u01cd\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\21\13\1\u01ce\10\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\13\13\1\u01cd\16\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\7\13"+
    "\1\u01cf\22\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u01d0\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\14\13\1\u01d1\15\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\5\13\1\u0130\24\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\13\13"+
    "\1\u01d2\16\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u01d3\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\5\13\1\201\24\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\31\13\1\u018d\3\0\1\13\1\0\1\13\22\0"+
    "\1\113\1\0\4\u01d4\1\121\10\0\1\122\1\123\1\122"+
    "\3\0\1\122\21\0\1\122\1\123\1\122\5\0\1\122"+
    "\50\0\5\u01d5\5\0\6\u01d5\3\0\1\122\16\0\6\u01d5"+
    "\5\0\1\122\24\0\1\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\2\13\1\246\27\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\24\13\1\u01d6\5\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\17\13"+
    "\1\u01d7\12\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\4\13\1\u01d8\25\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\24\13\1\u01d9\5\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\23\13\1\u0162\6\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\4\13"+
    "\1\u01da\25\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\1\13\1\u01db\23\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\10\13\1\u01dc\21\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\3\13\1\u0184\26\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\21\13"+
    "\1\u01dd\10\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\16\13\1\u01cd\13\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\21\13\1\u0184\10\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\1\u0195\31\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\3\13\1\u0130"+
    "\26\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\3\13\1\u01de\26\13\3\0"+
    "\1\13\1\0\1\13\22\0\1\113\1\0\4\u01df\1\121"+
    "\10\0\1\122\1\123\1\122\3\0\1\122\21\0\1\122"+
    "\1\123\1\122\5\0\1\122\50\0\5\u01e0\5\0\6\u01e0"+
    "\3\0\1\122\16\0\6\u01e0\5\0\1\122\24\0\1\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\15\13"+
    "\1\u01cd\14\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\17\13\1\u01e1\12\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\22\13\1\u01e2\7\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\25\13"+
    "\3\0\14\13\1\u01e3\15\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\1\u01e4"+
    "\31\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\16\13\1\u01e5\13\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\16\13\1\u01e6\13\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\1\u01e7\31\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\14\13\1\u01e8\10\13\3\0\32\13"+
    "\3\0\1\13\1\0\1\13\22\0\1\113\1\0\4\u01e9"+
    "\1\121\10\0\1\122\1\123\1\122\3\0\1\122\21\0"+
    "\1\122\1\123\1\122\5\0\1\122\50\0\5\u01ea\5\0"+
    "\6\u01ea\3\0\1\122\16\0\6\u01ea\5\0\1\122\24\0"+
    "\1\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\16\13\1\u01eb\13\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\22\13\1\u0184"+
    "\7\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\4\13\1\u01ec\25\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\3\13\1\u01ed\26\13\3\0\1\13\1\0"+
    "\2\13\10\0\1\13\12\0\5\13\5\0\25\13\3\0"+
    "\24\13\1\u01ee\5\13\3\0\1\13\1\0\2\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\15\13\1\u0184"+
    "\14\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\30\13\1\u01ef\1\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\17\13\1\u01f0\12\13\3\0\1\13\1\0"+
    "\1\13\22\0\1\113\1\0\4\u01f1\1\121\10\0\1\122"+
    "\1\123\1\122\3\0\1\122\21\0\1\122\1\123\1\122"+
    "\5\0\1\122\50\0\5\u01f2\5\0\6\u01f2\3\0\1\122"+
    "\16\0\6\u01f2\5\0\1\122\24\0\1\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\21\13\1\u019e\10\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\15\13\1\u0195\14\13\3\0\1\13"+
    "\1\0\2\13\10\0\1\13\12\0\5\13\5\0\17\13"+
    "\1\u019a\5\13\3\0\32\13\3\0\1\13\1\0\2\13"+
    "\10\0\1\13\12\0\5\13\5\0\25\13\3\0\15\13"+
    "\1\u01f3\14\13\3\0\1\13\1\0\2\13\10\0\1\13"+
    "\12\0\5\13\5\0\17\13\1\u01f4\5\13\3\0\32\13"+
    "\3\0\1\13\1\0\2\13\10\0\1\13\12\0\5\13"+
    "\5\0\25\13\3\0\4\13\1\u01f5\25\13\3\0\1\13"+
    "\1\0\1\13\22\0\1\113\1\0\4\u01f6\1\121\10\0"+
    "\1\122\1\123\1\122\3\0\1\122\21\0\1\122\1\123"+
    "\1\122\5\0\1\122\50\0\5\u01f7\5\0\6\u01f7\3\0"+
    "\1\122\16\0\6\u01f7\5\0\1\122\24\0\1\13\10\0"+
    "\1\13\12\0\5\13\5\0\25\13\3\0\3\13\1\u01e2"+
    "\26\13\3\0\1\13\1\0\2\13\10\0\1\13\12\0"+
    "\5\13\5\0\25\13\3\0\10\13\1\u01f8\21\13\3\0"+
    "\1\13\1\0\2\13\10\0\1\13\12\0\5\13\5\0"+
    "\25\13\3\0\21\13\1\u019d\10\13\3\0\1\13\1\0"+
    "\1\13\22\0\1\113\1\0\4\u01f9\1\121\10\0\1\122"+
    "\1\123\1\122\3\0\1\122\21\0\1\122\1\123\1\122"+
    "\5\0\1\122\50\0\5\u01fa\5\0\6\u01fa\3\0\1\122"+
    "\16\0\6\u01fa\5\0\1\122\24\0\1\13\10\0\1\13"+
    "\12\0\5\13\5\0\25\13\3\0\31\13\1\u0162\3\0"+
    "\1\13\1\0\1\13\22\0\1\113\1\0\4\u01fb\1\121"+
    "\10\0\1\122\1\123\1\122\3\0\1\122\21\0\1\122"+
    "\1\123\1\122\5\0\1\122\50\0\5\u01fc\5\0\6\u01fc"+
    "\3\0\1\122\16\0\6\u01fc\5\0\1\122\46\0\1\113"+
    "\1\0\4\u01fd\1\121\10\0\1\122\1\123\1\122\3\0"+
    "\1\122\21\0\1\122\1\123\1\122\5\0\1\122\50\0"+
    "\5\u01fe\5\0\6\u01fe\3\0\1\122\16\0\6\u01fe\5\0"+
    "\1\122\46\0\1\113\1\0\4\u01ff\1\121\10\0\1\122"+
    "\1\123\1\122\3\0\1\122\21\0\1\122\1\123\1\122"+
    "\5\0\1\122\73\0\1\122\31\0\1\122\46\0\1\113"+
    "\1\0\4\u0200\1\121\10\0\1\122\1\123\1\122\3\0"+
    "\1\122\21\0\1\122\1\123\1\122\5\0\1\122\46\0"+
    "\1\113\1\0\4\u0201\1\121\10\0\1\122\1\123\1\122"+
    "\3\0\1\122\21\0\1\122\1\123\1\122\5\0\1\122"+
    "\46\0\1\113\1\0\4\u0202\1\121\10\0\1\122\1\123"+
    "\1\122\3\0\1\122\21\0\1\122\1\123\1\122\5\0"+
    "\1\122\46\0\1\113\1\0\5\121\10\0\1\122\1\123"+
    "\1\122\3\0\1\122\21\0\1\122\1\123\1\122\5\0"+
    "\1\122\24\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[41882];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\5\0\1\11\3\1\1\11\2\1\3\11\1\1\1\11"+
    "\27\1\2\11\20\1\1\11\1\1\1\11\1\1\1\11"+
    "\1\1\1\11\3\1\1\11\1\1\2\11\3\1\1\0"+
    "\5\1\1\11\2\0\100\1\1\11\2\1\2\11\1\0"+
    "\1\1\1\11\2\1\1\0\107\1\2\0\354\1\1\0"+
    "\12\1\1\0\11\1\1\0\7\1\1\0\4\1\1\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\0\4\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  @SuppressWarnings("unused")
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  @SuppressWarnings("unused")
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  @SuppressWarnings("unused")
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public JavaLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public JavaLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
              {
                return null;
              }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { 
            }
            // fall through
          case 28: break;
          case 2:
            { return token(TokenType.OPERATOR);
            }
            // fall through
          case 29: break;
          case 3:
            { yybegin(STRING);
                                    tokenStart = yychar;
                                    tokenLength = 1;
            }
            // fall through
          case 30: break;
          case 4:
            { return token(TokenType.IDENTIFIER);
            }
            // fall through
          case 31: break;
          case 5:
            { yybegin(CHARLITERAL);
                                    tokenStart = yychar;
                                    tokenLength = 1;
            }
            // fall through
          case 32: break;
          case 6:
            { return token(TokenType.OPERATOR,  PARAN);
            }
            // fall through
          case 33: break;
          case 7:
            { return token(TokenType.OPERATOR, -PARAN);
            }
            // fall through
          case 34: break;
          case 8:
            { return token(TokenType.NUMBER);
            }
            // fall through
          case 35: break;
          case 9:
            { return token(TokenType.OPERATOR,  BRACKET);
            }
            // fall through
          case 36: break;
          case 10:
            { return token(TokenType.OPERATOR, -BRACKET);
            }
            // fall through
          case 37: break;
          case 11:
            { return token(TokenType.OPERATOR,  CURLY);
            }
            // fall through
          case 38: break;
          case 12:
            { return token(TokenType.OPERATOR, -CURLY);
            }
            // fall through
          case 39: break;
          case 13:
            { tokenLength += yylength();
            }
            // fall through
          case 40: break;
          case 14:
            { yybegin(YYINITIAL);
            }
            // fall through
          case 41: break;
          case 15:
            { yybegin(YYINITIAL);
                                     // length also includes the trailing quote
                                     return token(TokenType.STRING, tokenStart, tokenLength + 1);
            }
            // fall through
          case 42: break;
          case 16:
            { tokenLength ++;
            }
            // fall through
          case 43: break;
          case 17:
            { yybegin(JDOC_TAG);
                                     int start = tokenStart;
                                     tokenStart = yychar;
                                     int len = tokenLength;
                                     tokenLength = 1;
                                     return token(TokenType.COMMENT, start, len);
            }
            // fall through
          case 44: break;
          case 18:
            { yybegin(JDOC);
                                     // length also includes the trailing quote
                                     int start = tokenStart;
                                     tokenStart = yychar;
                                     int len = tokenLength;
                                     tokenLength = 1;
                                     return token(TokenType.COMMENT2, start, len);
            }
            // fall through
          case 45: break;
          case 19:
            { return token(TokenType.COMMENT);
            }
            // fall through
          case 46: break;
          case 20:
            { return token(TokenType.KEYWORD);
            }
            // fall through
          case 47: break;
          case 21:
            { tokenLength += 2;
            }
            // fall through
          case 48: break;
          case 22:
            { yybegin(YYINITIAL);
                                     return token(TokenType.COMMENT, tokenStart, tokenLength + 2);
            }
            // fall through
          case 49: break;
          case 23:
            { yybegin(JDOC);
                                    tokenStart = yychar;
                                    tokenLength = 3;
            }
            // fall through
          case 50: break;
          case 24:
            { return token(TokenType.TYPE);
            }
            // fall through
          case 51: break;
          case 25:
            { return token(TokenType.ERROR);
            }
            // fall through
          case 52: break;
          case 26:
            { return token(TokenType.WARNING);
            }
            // fall through
          case 53: break;
          case 27:
            { return token(TokenType.TYPE2);
            }
            // fall through
          case 54: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
